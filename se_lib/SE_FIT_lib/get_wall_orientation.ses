// get_wall_orientation.ses
// -- to 

// Programmer: Yongkang Chen, yongkang@cecs.pdx.edu

// Usage: get_wall_orientation ()
// the orientation of the wall can be determined by the sign of wall_dist_quant_p, but it is still not known whether the 
// normal is pointing into or out of the container which is to be determined with this procedure.
// The treatment is problemetic as it didn't include all possible cases. To be completed later.

procedure get_wall_orientation ()
	{get_wall_count();
	 define wall_orientation_check_idx integer[wall_count];
	 define wall_orientation_idx integer[wall_count];   /* 0, normal vector points into the container, 1, normal vector points out of the container */
	 for (idx := 1; idx < wall_count + 1; idx += 1)
		{
		 if wall_orientation_check_idx[idx] == 0 then
			{for (idx_in := idx+1; idx_in < wall_count+1; idx_in += 1)
				{if wall_dir_cos_alpha[idx]*wall_dir_cos_alpha[idx_in] + wall_dir_cos_beta[idx]*wall_dir_cos_beta[idx_in] + wall_dir_cos_gamma[idx]*wall_dir_cos_gamma[idx_in] > 0.99 then
					{if abs(wall_dist_quant_p[idx]) < abs(wall_dist_quant_p[idx_in]) then
						{wall_orientation_idx[idx] := 0;
						 wall_orientation_idx[idx_in] := 1;
						};
					 if abs(wall_dist_quant_p[idx]) > abs(wall_dist_quant_p[idx_in]) then
						{wall_orientation_idx[idx] := 1;
						 wall_orientation_idx[idx_in] := 0;
						};
					 wall_orientation_check_idx[idx] := 1;
					 wall_orientation_check_idx[idx_in] := 1;
					};
				 if wall_dir_cos_alpha[idx]*wall_dir_cos_alpha[idx_in] + wall_dir_cos_beta[idx]*wall_dir_cos_beta[idx_in] + wall_dir_cos_gamma[idx]*wall_dir_cos_gamma[idx_in] < -0.99 then
					{
					 wall_orientation_idx[idx] := 1;
					 wall_orientation_idx[idx_in] := 1;
					 wall_orientation_check_idx[idx] := 1;
					 wall_orientation_check_idx[idx_in] := 1;
					};
				}
			}
		}
	}


