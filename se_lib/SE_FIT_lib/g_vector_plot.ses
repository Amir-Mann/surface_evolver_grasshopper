// g vector in x-z plane

define g_vector_v_id integer[9]
define g_vector_e_id integer[10]
define g_vector_f_id integer[2]
define g_vector_cl_v_id integer[2]
define g_vector_cl_e_id integer[1]

// two options, one for relative size and the other for absolute size.

//g_vector_delta := maximum(max(vertex,x),maximum(max(vertex,y),max(vertex,z)))/5
//g_vector_delta := max(vertex,x)/8
g_vector_delta :=  0.19 // 0.6506875 for EDS LOX, 0.19 for descent/ascent
g_vector_x0 := 1.15*min(vertex,x) // 1.15 for descent, 1.32 EDS LOX, 1.3 ascent

{define constraint g_vector_circle formula (x - g_vector_x0)^2 + z^2 = g_vector_delta^2;}
g_vector_l  := 0.65*g_vector_delta
g_vector_dx := 0.05*g_vector_delta*sin(phi*pi/180)
g_vector_dz := 0.05*g_vector_delta*cos(phi*pi/180)

g_vector_v_id[1] := new_vertex(g_vector_x0, 1, 0)
g_vector_v_id[2] := new_vertex(g_vector_x0-g_vector_l*cos(phi*pi/180), 1, -g_vector_l*sin(phi*pi/180))
g_vector_v_id[3] := new_vertex(g_vector_x0-g_vector_l*cos(phi*pi/180)+g_vector_dx, 1, -g_vector_l*sin(phi*pi/180)-g_vector_dz)
g_vector_v_id[4] := new_vertex(g_vector_x0-g_vector_delta*cos(phi*pi/180), 1, -g_vector_delta*sin(phi*pi/180))
g_vector_v_id[5] := new_vertex(g_vector_x0-g_vector_l*cos(phi*pi/180)-g_vector_dx, 1, -g_vector_l*sin(phi*pi/180)+g_vector_dz)

g_vector_v_id[6] := new_vertex(g_vector_x0-g_vector_delta*cos(0*pi/180), 1, -g_vector_delta*sin(0*pi/180))
g_vector_v_id[7] := new_vertex(g_vector_x0-g_vector_delta*cos(90*pi/180), 1, -g_vector_delta*sin(90*pi/180))
g_vector_v_id[8] := new_vertex(g_vector_x0-g_vector_delta*cos(180*pi/180), 1, -g_vector_delta*sin(180*pi/180))
g_vector_v_id[9] := new_vertex(g_vector_x0-g_vector_delta*cos(270*pi/180), 1, -g_vector_delta*sin(270*pi/180))

for (id_ind := 1; id_ind < 10; id_ind+=1) 	{set vertex[g_vector_v_id[id_ind]] fixed};

//if phi*(phi-90)<=0 then
//	{g_vector_cl_v_id[1] := new_vertex(g_vector_x0-g_vector_delta*cos(phi*pi/180), 1, 0)}
//if (phi-90)*(phi-180) <=0 then
//	{g_vector_cl_v_id[1] := new_vertex(g_vector_x0+g_vector_delta*cos(phi*pi/180), 1, 0)}
//set vertex[g_vector_cl_v_id[1]] fixed
//g_vector_cl_e_id[1] := new_edge(g_vector_v_id[1], g_vector_cl_v_id[1])
//	set edge[g_vector_cl_e_id[1]] color black; 
//	set edge[g_vector_cl_e_id[1]] bare;
//	set edge[g_vector_cl_e_id[1]] noncontent;
//	set edge[g_vector_cl_e_id[1]] fixed;
//	set edge[g_vector_cl_e_id[1]] no_refine;

g_vector_e_id[1] := new_edge(g_vector_v_id[1],g_vector_v_id[2])
g_vector_e_id[2] := new_edge(g_vector_v_id[2],g_vector_v_id[3])
g_vector_e_id[3] := new_edge(g_vector_v_id[3],g_vector_v_id[4])
g_vector_e_id[4] := new_edge(g_vector_v_id[4],g_vector_v_id[5])
g_vector_e_id[5] := new_edge(g_vector_v_id[5],g_vector_v_id[2])
g_vector_e_id[6] := new_edge(g_vector_v_id[2],g_vector_v_id[4])

g_vector_e_id[7] := new_edge(g_vector_v_id[6],g_vector_v_id[7])
g_vector_e_id[8] := new_edge(g_vector_v_id[7],g_vector_v_id[8])
g_vector_e_id[9] := new_edge(g_vector_v_id[8],g_vector_v_id[9])
g_vector_e_id[10] := new_edge(g_vector_v_id[9],g_vector_v_id[6])


for (id_ind := 1; id_ind < 7; id_ind+=1) {
	set edge[g_vector_e_id[id_ind]] color black; 
	set edge[g_vector_e_id[id_ind]] bare;
	set edge[g_vector_e_id[id_ind]] noncontent;
	set edge[g_vector_e_id[id_ind]] fixed;
	set edge[g_vector_e_id[id_ind]] no_refine;
				};

for (id_ind := 7; id_ind < 11; id_ind+=1) {
	set edge[g_vector_e_id[id_ind]] color black; 
	set edge[g_vector_e_id[id_ind]] bare;
	set edge[g_vector_e_id[id_ind]] noncontent;
	set edge[g_vector_e_id[id_ind]] fixed;
	set edge[g_vector_e_id[id_ind]] constraint g_vector_circle;
				};
                     {refine edge where on_constraint g_vector_circle}5;
                     set edge where on_constraint g_vector_circle no_refine

g_vector_f_id[1] := new_facet(g_vector_e_id[2],g_vector_e_id[3],-g_vector_e_id[6])
g_vector_f_id[2] := new_facet(g_vector_e_id[4],g_vector_e_id[5],g_vector_e_id[6])
			for (id_ind := 1; id_ind < 3; id_ind+=1)  {
				 set facet[g_vector_f_id[id_ind]] tension 0; 
				 set facet[g_vector_f_id[id_ind]] no_refine;
				 set facet[g_vector_f_id[id_ind]] noncontent; 
				 set facet[g_vector_f_id[id_ind]] color black
				};




