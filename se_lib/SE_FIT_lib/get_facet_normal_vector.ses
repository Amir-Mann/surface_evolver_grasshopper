// get_facet_normal_vector.ses
// -- to 
//
// Programmer: Yongkang Chen, yongkang@cecs.pdx.edu
//
// Usage: get_facet_normal_vector (id)
//         id_1: id number of the picked facet. 
//
// The formulas are adopted from Differential and Integral Calculus, Courant, Vol II, pp8-9
// the coefficients cf_coef_x, cf_coef_y, cf_coef_z, and cf_constant are determined with equation
// given in the form of a determinant
//     |x-x1   y-y1   z-z1|
//     |x-x2   y-y2   z-z2| = 0 
//     |x-x3   y-y3   z-z3|
// the surface normal vector follows the right hand rule relative to the order of the vertices provided.
//
procedure get_facet_normal_vector (integer picked_facet_id)
	{ 
	 local f_id;
	 f_id := picked_facet_id;
	 cfx_1 := facet[f_id].vertex[1].x;
	 cfy_1 := facet[f_id].vertex[1].y;
	 cfz_1 := facet[f_id].vertex[1].z;
	 cfx_2 := facet[f_id].vertex[2].x;
	 cfy_2 := facet[f_id].vertex[2].y;
	 cfz_2 := facet[f_id].vertex[2].z;
	 cfx_3 := facet[f_id].vertex[3].x;
	 cfy_3 := facet[f_id].vertex[3].y;
	 cfz_3 := facet[f_id].vertex[3].z;
        cf_coef_x := cfy_1*cfz_2 + cfy_2*cfz_3 + cfy_3*cfz_1 - cfy_1*cfz_3 - cfy_2*cfz_1 - cfy_3*cfz_2;
        cf_coef_y := cfx_1*cfz_3 + cfx_2*cfz_1 + cfx_3*cfz_2 - cfx_1*cfz_2 - cfx_2*cfz_3 - cfx_3*cfz_1;
        cf_coef_z := cfx_1*cfy_2 + cfx_2*cfy_3 + cfx_3*cfy_1 - cfx_1*cfy_3 - cfx_2*cfy_1 - cfx_3*cfy_2;
        cf_constant := cfx_1*cfy_3*cfz_2 + cfx_2*cfy_1*cfz_3 + cfx_3*cfy_2*cfz_1 - cfx_1*cfy_2*cfz_3 - cfx_2*cfy_3*cfz_1 - cfx_3*cfy_1*cfz_2;
	 dir_cos_alpha := cf_coef_x/sqrt(cf_coef_x^2 + cf_coef_y^2 + cf_coef_z^2);
	 /* print dir_cos_alpha; */
	 dir_cos_beta := cf_coef_y/sqrt(cf_coef_x^2 + cf_coef_y^2 + cf_coef_z^2);
	 /* print dir_cos_beta; */
	 dir_cos_gamma := cf_coef_z/sqrt(cf_coef_x^2 + cf_coef_y^2 + cf_coef_z^2);
	 /* print dir_cos_gamma; */
	 dist_quant_p := -cf_constant/sqrt(cf_coef_x^2 + cf_coef_y^2 + cf_coef_z^2);
	 /* print dist_quant_p; */
	 return;
	}





