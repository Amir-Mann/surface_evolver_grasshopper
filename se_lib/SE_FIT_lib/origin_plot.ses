// origin in x-z plane

define origin_v_id integer[4]
define origin_e_id integer[2]
origin_delta := maximum(max(vertex,x),maximum(max(vertex,y),max(vertex,z)))/25
//origin_delta := 0.063 // for ascent
origin_v_y := max(vertex,y)
origin_v_id[1] := new_vertex(0, origin_v_y, -origin_delta)
origin_v_id[2] := new_vertex(0, origin_v_y,  origin_delta)
origin_v_id[3] := new_vertex(-origin_delta, origin_v_y, 0)
origin_v_id[4] := new_vertex(origin_delta, origin_v_y, 0)
for (id_ind := 1; id_ind < 5; id_ind+=1) 	{set vertex[origin_v_id[id_ind]] fixed};
origin_e_id[1] := new_edge(origin_v_id[1],origin_v_id[2])
origin_e_id[2] := new_edge(origin_v_id[3],origin_v_id[4])
			for (id_ind := 1; id_ind < 3; id_ind+=1) {
				 set edge[origin_e_id[id_ind]] color black; 
				 set edge[origin_e_id[id_ind]] bare;
				 set edge[origin_e_id[id_ind]] noncontent;
			        set edge[origin_e_id[id_ind]] fixed;
			        set edge[origin_e_id[id_ind]] no_refine;
				};
foreach edge ee where not fixed do { 
	if sqrt(min(ee.vertex,abs(x))^2+min(ee.vertex,abs(z))^2) < origin_delta then
		{set ee.color -1}
					}	

//s
//R
//15l15c
//q






